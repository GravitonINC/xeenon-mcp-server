{
  "openapi": "3.1.0",
  "info": {
    "title": "Xeenon Public API",
    "description": "TODO: Add description",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://dev.public-api.xeenon.xyz",
      "description": "Dev server"
    }
  ],
  "components": {
    "securitySchemes": {
      "headerApiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "User API key"
      }
    },
    "schemas": {}
  },
  "security": [
    {
      "headerApiKey": []
    }
  ],
  "paths": {
    "/chat/messages": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The message id",
                        "type": "string"
                      },
                      "text": {
                        "description": "The message text",
                        "type": "string"
                      },
                      "html": {
                        "description": "The message html",
                        "type": "string"
                      },
                      "type": {
                        "description": "The message type",
                        "type": "string",
                        "enum": [
                          "text",
                          "image",
                          "video",
                          "audio",
                          "file",
                          "link"
                        ]
                      },
                      "shadowed": {
                        "description": "Whether the message is shadowed",
                        "type": "boolean"
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "The user id",
                            "type": "string"
                          },
                          "name": {
                            "description": "The user name",
                            "type": "string"
                          },
                          "image": {
                            "description": "The user image",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "image"
                        ],
                        "additionalProperties": false
                      },
                      "created_at": {
                        "description": "The message created at",
                        "type": "string"
                      },
                      "updated_at": {
                        "description": "The message updated at",
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "text",
                      "html",
                      "type",
                      "shadowed",
                      "user",
                      "created_at",
                      "updated_at"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getChatMessages",
        "tags": [
          "Chat"
        ],
        "parameters": [],
        "description": "Get the recent messages for requesting user's channel"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The message id",
                      "type": "string"
                    },
                    "text": {
                      "description": "The message text",
                      "type": "string"
                    },
                    "html": {
                      "description": "The message html",
                      "type": "string"
                    },
                    "type": {
                      "description": "The message type",
                      "type": "string",
                      "enum": [
                        "text",
                        "image",
                        "video",
                        "audio",
                        "file",
                        "link"
                      ]
                    },
                    "shadowed": {
                      "description": "Whether the message is shadowed",
                      "type": "boolean"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The user id",
                          "type": "string"
                        },
                        "name": {
                          "description": "The user name",
                          "type": "string"
                        },
                        "image": {
                          "description": "The user image",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "image"
                      ],
                      "additionalProperties": false
                    },
                    "created_at": {
                      "description": "The message created at",
                      "type": "string"
                    },
                    "updated_at": {
                      "description": "The message updated at",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "text",
                    "html",
                    "type",
                    "shadowed",
                    "user",
                    "created_at",
                    "updated_at"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "postChatMessages",
        "tags": [
          "Chat"
        ],
        "parameters": [],
        "description": "Send a message to requesting user's channel. Should have joined the channel first in xeenon.xyz or in the mobile app",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "description": "The message to send",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 500
                  }
                },
                "required": [
                  "message"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/chat/{userAddress}/messages": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The message id",
                        "type": "string"
                      },
                      "text": {
                        "description": "The message text",
                        "type": "string"
                      },
                      "html": {
                        "description": "The message html",
                        "type": "string"
                      },
                      "type": {
                        "description": "The message type",
                        "type": "string",
                        "enum": [
                          "text",
                          "image",
                          "video",
                          "audio",
                          "file",
                          "link"
                        ]
                      },
                      "shadowed": {
                        "description": "Whether the message is shadowed",
                        "type": "boolean"
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "The user id",
                            "type": "string"
                          },
                          "name": {
                            "description": "The user name",
                            "type": "string"
                          },
                          "image": {
                            "description": "The user image",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "image"
                        ],
                        "additionalProperties": false
                      },
                      "created_at": {
                        "description": "The message created at",
                        "type": "string"
                      },
                      "updated_at": {
                        "description": "The message updated at",
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "text",
                      "html",
                      "type",
                      "shadowed",
                      "user",
                      "created_at",
                      "updated_at"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getChatByUserAddressMessages",
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userAddress",
            "schema": {
              "description": "The Solana address of the user's chat channel",
              "type": "string"
            },
            "required": true
          }
        ],
        "description": "Get the recent messages for a chat channel"
      }
    },
    "/content": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "description": "The content ID",
                        "type": "string"
                      },
                      "kind": {
                        "description": "The type of content",
                        "type": "string",
                        "enum": [
                          "Stream",
                          "Video",
                          "Clip"
                        ]
                      },
                      "headline": {
                        "description": "The content headline",
                        "type": "string"
                      },
                      "description": {
                        "description": "The content description",
                        "type": "string"
                      },
                      "thumbnail": {
                        "description": "The content thumbnail URL",
                        "type": "string"
                      },
                      "url": {
                        "description": "The content URL in Xeenon",
                        "type": "string"
                      },
                      "tags": {
                        "description": "The content tags",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "isNSFW": {
                        "description": "Whether the content is NSFW",
                        "type": "boolean"
                      },
                      "durationSeconds": {
                        "description": "The content duration in seconds",
                        "type": "number"
                      },
                      "views": {
                        "description": "The number of views",
                        "type": "number"
                      },
                      "createdAt": {
                        "description": "ISO 8601 when the content was created",
                        "type": "string"
                      },
                      "user": {
                        "description": "The content creator",
                        "type": "object",
                        "properties": {
                          "address": {
                            "description": "The Solana address of the user",
                            "type": "string"
                          },
                          "bannerImage": {
                            "description": "The banner image of the user",
                            "type": "string"
                          },
                          "description": {
                            "description": "The description of the user",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "The display name of the user",
                            "type": "string"
                          },
                          "isNSFW": {
                            "description": "Whether the user is NSFW",
                            "type": "boolean"
                          },
                          "isVerified": {
                            "description": "Whether the user is verified",
                            "type": "boolean"
                          },
                          "profileImage": {
                            "description": "The profile image of the user",
                            "type": "string"
                          },
                          "isLive": {
                            "description": "Whether the user is live",
                            "type": "boolean"
                          },
                          "followersCount": {
                            "description": "The number of followers of the user",
                            "type": "number"
                          },
                          "subscribersCount": {
                            "description": "The number of subscribers of the user",
                            "type": "number"
                          },
                          "profileUrl": {
                            "description": "The Xeenon profile URL of the user",
                            "type": "string"
                          }
                        },
                        "required": [
                          "address",
                          "isNSFW",
                          "isVerified",
                          "isLive",
                          "followersCount",
                          "subscribersCount",
                          "profileUrl"
                        ],
                        "additionalProperties": false
                      },
                      "subcategory": {
                        "description": "The content subcategory",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The subcategory name",
                            "type": "string"
                          },
                          "slug": {
                            "description": "The subcategory slug",
                            "type": "string"
                          },
                          "description": {
                            "description": "The subcategory description",
                            "type": "string"
                          },
                          "category": {
                            "description": "The category slug of the subcategory",
                            "type": "string"
                          },
                          "image": {
                            "description": "The subcategory image",
                            "type": "string"
                          },
                          "isNSFW": {
                            "description": "Whether the subcategory is NSFW",
                            "type": "boolean"
                          },
                          "tags": {
                            "description": "The subcategory tags",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "name",
                          "slug",
                          "description",
                          "category"
                        ],
                        "additionalProperties": false
                      },
                      "reactionsSummary": {
                        "description": "The summary of the reactions",
                        "type": "object",
                        "properties": {
                          "likesCount": {
                            "description": "The number of likes",
                            "type": "number"
                          },
                          "dislikesCount": {
                            "description": "The number of dislikes",
                            "type": "number"
                          },
                          "commentsCount": {
                            "description": "The number of comments",
                            "type": "number"
                          },
                          "isLiked": {
                            "description": "Whether the user has liked the model",
                            "type": "boolean"
                          },
                          "isDisliked": {
                            "description": "Whether the user has disliked the model",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "likesCount",
                          "dislikesCount",
                          "commentsCount"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "_id",
                      "kind",
                      "headline",
                      "createdAt",
                      "user",
                      "reactionsSummary"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getContent",
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "schema": {
              "description": "Filter content by category",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "subcategory",
            "schema": {
              "description": "Filter content by subcategory",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "creatorAddress",
            "schema": {
              "description": "Filter content by creator Solana address",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The limit",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "skip",
            "schema": {
              "description": "The skip",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "kind",
            "schema": {
              "description": "The type of content",
              "type": "string",
              "enum": [
                "Stream",
                "Video",
                "Clip"
              ]
            }
          }
        ],
        "description": "Get Xeenon content (Clips, Videos, Streams)"
      }
    },
    "/content/categories": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The category name",
                        "type": "string"
                      },
                      "slug": {
                        "description": "The category slug",
                        "type": "string"
                      },
                      "description": {
                        "description": "The category description",
                        "type": "string"
                      },
                      "tags": {
                        "description": "The category tags",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "image": {
                        "description": "The category image",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "slug",
                      "description"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getContentCategories",
        "tags": [
          "Content"
        ],
        "parameters": [],
        "description": "Get all Xeenon content categories"
      }
    },
    "/leaderboard": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "user": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "description": "The Solana address of the user",
                            "type": "string"
                          },
                          "bannerImage": {
                            "description": "The banner image of the user",
                            "type": "string"
                          },
                          "description": {
                            "description": "The description of the user",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "The display name of the user",
                            "type": "string"
                          },
                          "isNSFW": {
                            "description": "Whether the user is NSFW",
                            "type": "boolean"
                          },
                          "isVerified": {
                            "description": "Whether the user is verified",
                            "type": "boolean"
                          },
                          "profileImage": {
                            "description": "The profile image of the user",
                            "type": "string"
                          },
                          "isLive": {
                            "description": "Whether the user is live",
                            "type": "boolean"
                          },
                          "followersCount": {
                            "description": "The number of followers of the user",
                            "type": "number"
                          },
                          "subscribersCount": {
                            "description": "The number of subscribers of the user",
                            "type": "number"
                          },
                          "profileUrl": {
                            "description": "The Xeenon profile URL of the user",
                            "type": "string"
                          }
                        },
                        "required": [
                          "address",
                          "isNSFW",
                          "isVerified",
                          "isLive",
                          "followersCount",
                          "subscribersCount",
                          "profileUrl"
                        ],
                        "additionalProperties": false
                      },
                      "month": {
                        "description": "The month of the leaderboard",
                        "type": "string"
                      },
                      "score": {
                        "description": "The score of the user in the leaderboard",
                        "type": "number"
                      },
                      "position": {
                        "description": "The position of the user in the leaderboard",
                        "type": "number"
                      },
                      "minutesStreamed": {
                        "description": "The minutes streamed by the user in the period",
                        "type": "number"
                      }
                    },
                    "required": [
                      "user",
                      "month",
                      "score",
                      "position",
                      "minutesStreamed"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getLeaderboard",
        "tags": [
          "Leaderboard"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "monthOffset",
            "schema": {
              "description": "The month offset (1 = last month, 2 = 2 months ago, etc)",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "description": "The category slug to get a specific category leaderboard",
              "type": "string"
            }
          }
        ],
        "description": "Get Xeenon leaderboard by month or category"
      }
    },
    "/follow": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "emailNotifications": {
                      "description": "Email notifications preferences",
                      "type": "object",
                      "properties": {
                        "newVod": {
                          "description": "Receive email notifications when the user uploads a new video",
                          "type": "boolean"
                        },
                        "newStream": {
                          "description": "Receive email notifications when the user goes live",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "newVod",
                        "newStream"
                      ],
                      "additionalProperties": false
                    },
                    "inAppNotifications": {
                      "description": "In-app notifications preferences",
                      "type": "object",
                      "properties": {
                        "newVod": {
                          "description": "Receive in-app notifications when the user uploads a new video",
                          "type": "boolean"
                        },
                        "newStream": {
                          "description": "Receive in-app notifications when the user goes live",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "newVod",
                        "newStream"
                      ],
                      "additionalProperties": false
                    },
                    "_id": {
                      "description": "The id of the follow",
                      "type": "string"
                    }
                  },
                  "required": [
                    "emailNotifications",
                    "inAppNotifications",
                    "_id"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "postFollow",
        "tags": [
          "Follow"
        ],
        "parameters": [],
        "description": "Follow a user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "emailNotifications": {
                    "description": "Email notifications preferences",
                    "type": "object",
                    "properties": {
                      "newVod": {
                        "description": "Receive email notifications when the user uploads a new video",
                        "type": "boolean"
                      },
                      "newStream": {
                        "description": "Receive email notifications when the user goes live",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "newVod",
                      "newStream"
                    ],
                    "additionalProperties": false
                  },
                  "inAppNotifications": {
                    "description": "In-app notifications preferences",
                    "type": "object",
                    "properties": {
                      "newVod": {
                        "description": "Receive in-app notifications when the user uploads a new video",
                        "type": "boolean"
                      },
                      "newStream": {
                        "description": "Receive in-app notifications when the user goes live",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "newVod",
                      "newStream"
                    ],
                    "additionalProperties": false
                  },
                  "address": {
                    "description": "The address of the user to follow",
                    "type": "string"
                  }
                },
                "required": [
                  "emailNotifications",
                  "inAppNotifications",
                  "address"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "description": "The number of users unfollowed",
                      "type": "number"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "deleteFollow",
        "tags": [
          "Follow"
        ],
        "parameters": [],
        "description": "Unfollow a user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "description": "The address of the user to unfollow",
                    "type": "string"
                  }
                },
                "required": [
                  "address"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/follow/following": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "description": "The total number of users the user is following",
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "description": "The Solana address of the user",
                            "type": "string"
                          },
                          "bannerImage": {
                            "description": "The banner image of the user",
                            "type": "string"
                          },
                          "description": {
                            "description": "The description of the user",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "The display name of the user",
                            "type": "string"
                          },
                          "isNSFW": {
                            "description": "Whether the user is NSFW",
                            "type": "boolean"
                          },
                          "isVerified": {
                            "description": "Whether the user is verified",
                            "type": "boolean"
                          },
                          "profileImage": {
                            "description": "The profile image of the user",
                            "type": "string"
                          },
                          "isLive": {
                            "description": "Whether the user is live",
                            "type": "boolean"
                          },
                          "followersCount": {
                            "description": "The number of followers of the user",
                            "type": "number"
                          },
                          "subscribersCount": {
                            "description": "The number of subscribers of the user",
                            "type": "number"
                          },
                          "profileUrl": {
                            "description": "The Xeenon profile URL of the user",
                            "type": "string"
                          }
                        },
                        "required": [
                          "address",
                          "isNSFW",
                          "isVerified",
                          "isLive",
                          "followersCount",
                          "subscribersCount",
                          "profileUrl"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "count",
                    "items"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getFollowFollowing",
        "tags": [
          "Follow"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The number of items to return",
              "default": 10,
              "type": "number"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "skip",
            "schema": {
              "description": "The number of items to skip",
              "default": 0,
              "type": "number"
            },
            "required": true
          }
        ],
        "description": "Get the users the user is following"
      }
    },
    "/follow/followers": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "description": "The total number of users following the user",
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "description": "The Solana address of the user",
                            "type": "string"
                          },
                          "bannerImage": {
                            "description": "The banner image of the user",
                            "type": "string"
                          },
                          "description": {
                            "description": "The description of the user",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "The display name of the user",
                            "type": "string"
                          },
                          "isNSFW": {
                            "description": "Whether the user is NSFW",
                            "type": "boolean"
                          },
                          "isVerified": {
                            "description": "Whether the user is verified",
                            "type": "boolean"
                          },
                          "profileImage": {
                            "description": "The profile image of the user",
                            "type": "string"
                          },
                          "isLive": {
                            "description": "Whether the user is live",
                            "type": "boolean"
                          },
                          "followersCount": {
                            "description": "The number of followers of the user",
                            "type": "number"
                          },
                          "subscribersCount": {
                            "description": "The number of subscribers of the user",
                            "type": "number"
                          },
                          "profileUrl": {
                            "description": "The Xeenon profile URL of the user",
                            "type": "string"
                          }
                        },
                        "required": [
                          "address",
                          "isNSFW",
                          "isVerified",
                          "isLive",
                          "followersCount",
                          "subscribersCount",
                          "profileUrl"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "count",
                    "items"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getFollowFollowers",
        "tags": [
          "Follow"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The number of items to return",
              "default": 10,
              "type": "number"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "skip",
            "schema": {
              "description": "The number of items to skip",
              "default": 0,
              "type": "number"
            },
            "required": true
          }
        ],
        "description": "Get the users following the user"
      }
    },
    "/follow/content": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "description": "The content ID",
                        "type": "string"
                      },
                      "kind": {
                        "description": "The type of content",
                        "type": "string",
                        "enum": [
                          "Stream",
                          "Video",
                          "Clip"
                        ]
                      },
                      "headline": {
                        "description": "The content headline",
                        "type": "string"
                      },
                      "description": {
                        "description": "The content description",
                        "type": "string"
                      },
                      "thumbnail": {
                        "description": "The content thumbnail URL",
                        "type": "string"
                      },
                      "url": {
                        "description": "The content URL in Xeenon",
                        "type": "string"
                      },
                      "tags": {
                        "description": "The content tags",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "isNSFW": {
                        "description": "Whether the content is NSFW",
                        "type": "boolean"
                      },
                      "durationSeconds": {
                        "description": "The content duration in seconds",
                        "type": "number"
                      },
                      "views": {
                        "description": "The number of views",
                        "type": "number"
                      },
                      "createdAt": {
                        "description": "ISO 8601 when the content was created",
                        "type": "string"
                      },
                      "user": {
                        "description": "The content creator",
                        "type": "object",
                        "properties": {
                          "address": {
                            "description": "The Solana address of the user",
                            "type": "string"
                          },
                          "bannerImage": {
                            "description": "The banner image of the user",
                            "type": "string"
                          },
                          "description": {
                            "description": "The description of the user",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "The display name of the user",
                            "type": "string"
                          },
                          "isNSFW": {
                            "description": "Whether the user is NSFW",
                            "type": "boolean"
                          },
                          "isVerified": {
                            "description": "Whether the user is verified",
                            "type": "boolean"
                          },
                          "profileImage": {
                            "description": "The profile image of the user",
                            "type": "string"
                          },
                          "isLive": {
                            "description": "Whether the user is live",
                            "type": "boolean"
                          },
                          "followersCount": {
                            "description": "The number of followers of the user",
                            "type": "number"
                          },
                          "subscribersCount": {
                            "description": "The number of subscribers of the user",
                            "type": "number"
                          },
                          "profileUrl": {
                            "description": "The Xeenon profile URL of the user",
                            "type": "string"
                          }
                        },
                        "required": [
                          "address",
                          "isNSFW",
                          "isVerified",
                          "isLive",
                          "followersCount",
                          "subscribersCount",
                          "profileUrl"
                        ],
                        "additionalProperties": false
                      },
                      "subcategory": {
                        "description": "The content subcategory",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The subcategory name",
                            "type": "string"
                          },
                          "slug": {
                            "description": "The subcategory slug",
                            "type": "string"
                          },
                          "description": {
                            "description": "The subcategory description",
                            "type": "string"
                          },
                          "category": {
                            "description": "The category slug of the subcategory",
                            "type": "string"
                          },
                          "image": {
                            "description": "The subcategory image",
                            "type": "string"
                          },
                          "isNSFW": {
                            "description": "Whether the subcategory is NSFW",
                            "type": "boolean"
                          },
                          "tags": {
                            "description": "The subcategory tags",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "name",
                          "slug",
                          "description",
                          "category"
                        ],
                        "additionalProperties": false
                      },
                      "reactionsSummary": {
                        "description": "The summary of the reactions",
                        "type": "object",
                        "properties": {
                          "likesCount": {
                            "description": "The number of likes",
                            "type": "number"
                          },
                          "dislikesCount": {
                            "description": "The number of dislikes",
                            "type": "number"
                          },
                          "commentsCount": {
                            "description": "The number of comments",
                            "type": "number"
                          },
                          "isLiked": {
                            "description": "Whether the user has liked the model",
                            "type": "boolean"
                          },
                          "isDisliked": {
                            "description": "Whether the user has disliked the model",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "likesCount",
                          "dislikesCount",
                          "commentsCount"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "_id",
                      "kind",
                      "headline",
                      "createdAt",
                      "user",
                      "reactionsSummary"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getFollowContent",
        "tags": [
          "Follow"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The number of items to return",
              "default": 10,
              "type": "number"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "skip",
            "schema": {
              "description": "The number of items to skip",
              "default": 0,
              "type": "number"
            },
            "required": true
          }
        ],
        "description": "Get the content of users the user is following"
      }
    },
    "/reactions": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "description": "The reaction ID",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of reaction",
                      "type": "string",
                      "enum": [
                        "like",
                        "dislike",
                        "comment"
                      ]
                    },
                    "content": {
                      "description": "The comment content",
                      "type": "string"
                    },
                    "count": {
                      "description": "The reaction count",
                      "type": "number"
                    },
                    "createdAt": {
                      "description": "ISO 8601 when the reaction was created",
                      "type": "string"
                    },
                    "modelId": {
                      "description": "The ID of the model being reacted to",
                      "type": "string"
                    },
                    "modelType": {
                      "description": "The type of model being reacted to",
                      "type": "string",
                      "enum": [
                        "Content",
                        "Reaction"
                      ]
                    }
                  },
                  "required": [
                    "_id",
                    "type",
                    "createdAt",
                    "modelId",
                    "modelType"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "~standard": {
                    "vendor": "zod",
                    "version": 1
                  },
                  "def": {
                    "type": "string"
                  },
                  "format": null,
                  "minLength": null,
                  "maxLength": null
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "postReactions",
        "tags": [
          "Reactions"
        ],
        "parameters": [],
        "description": "Create a reaction (like/dislike) on a model",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modelId": {
                    "description": "The ID of the content to react to",
                    "type": "string"
                  },
                  "modelType": {
                    "description": "The type of model to react to. `Content` if reacting to a video, clip or stream, `Reaction` if reacting to a comment",
                    "type": "string",
                    "enum": [
                      "Content",
                      "Reaction"
                    ]
                  },
                  "type": {
                    "description": "The type of reaction",
                    "type": "string",
                    "enum": [
                      "like",
                      "dislike"
                    ]
                  },
                  "count": {
                    "description": "The number of likes (Only allowed when reaction to streams)",
                    "type": "number",
                    "maximum": 100
                  }
                },
                "required": [
                  "modelId",
                  "modelType",
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "deleteReactions",
        "tags": [
          "Reactions"
        ],
        "parameters": [],
        "description": "Remove a reaction (like/dislike) from a model",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modelId": {
                    "description": "The ID of the model to remove reaction from",
                    "type": "string"
                  },
                  "modelType": {
                    "description": "The type of model",
                    "type": "string",
                    "enum": [
                      "Content",
                      "Reaction"
                    ]
                  },
                  "type": {
                    "description": "The type of reaction to remove",
                    "type": "string",
                    "enum": [
                      "like",
                      "dislike"
                    ]
                  }
                },
                "required": [
                  "modelId",
                  "modelType",
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/reactions/comments": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "description": "The comment ID",
                      "type": "string"
                    },
                    "content": {
                      "description": "The comment content",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "ISO 8601 when the reaction was created",
                      "type": "string"
                    },
                    "modelId": {
                      "description": "The ID of the model being reacted to",
                      "type": "string"
                    },
                    "modelType": {
                      "description": "The type of model being reacted to",
                      "type": "string",
                      "enum": [
                        "Content",
                        "Reaction"
                      ]
                    },
                    "user": {
                      "description": "The user who made the comment",
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "The Solana address of the user",
                          "type": "string"
                        },
                        "bannerImage": {
                          "description": "The banner image of the user",
                          "type": "string"
                        },
                        "description": {
                          "description": "The description of the user",
                          "type": "string"
                        },
                        "displayName": {
                          "description": "The display name of the user",
                          "type": "string"
                        },
                        "isNSFW": {
                          "description": "Whether the user is NSFW",
                          "type": "boolean"
                        },
                        "isVerified": {
                          "description": "Whether the user is verified",
                          "type": "boolean"
                        },
                        "profileImage": {
                          "description": "The profile image of the user",
                          "type": "string"
                        },
                        "isLive": {
                          "description": "Whether the user is live",
                          "type": "boolean"
                        },
                        "followersCount": {
                          "description": "The number of followers of the user",
                          "type": "number"
                        },
                        "subscribersCount": {
                          "description": "The number of subscribers of the user",
                          "type": "number"
                        },
                        "profileUrl": {
                          "description": "The Xeenon profile URL of the user",
                          "type": "string"
                        }
                      },
                      "required": [
                        "address",
                        "isNSFW",
                        "isVerified",
                        "isLive",
                        "followersCount",
                        "subscribersCount",
                        "profileUrl"
                      ],
                      "additionalProperties": false
                    },
                    "reactionsSummary": {
                      "description": "The summary of the reaction",
                      "type": "object",
                      "properties": {
                        "likesCount": {
                          "description": "The number of likes",
                          "type": "number"
                        },
                        "dislikesCount": {
                          "description": "The number of dislikes",
                          "type": "number"
                        },
                        "commentsCount": {
                          "description": "The number of comments",
                          "type": "number"
                        },
                        "isLiked": {
                          "description": "Whether the user has liked the model",
                          "type": "boolean"
                        },
                        "isDisliked": {
                          "description": "Whether the user has disliked the model",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "likesCount",
                        "dislikesCount",
                        "commentsCount"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "_id",
                    "createdAt",
                    "modelId",
                    "modelType",
                    "user",
                    "reactionsSummary"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "postReactionsComments",
        "tags": [
          "Reactions"
        ],
        "parameters": [],
        "description": "Create a comment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modelId": {
                    "description": "The ID of the model to comment on",
                    "type": "string"
                  },
                  "modelType": {
                    "description": "The type of model to comment on. `Content` if commenting on a video or clip, `Reaction` if replying to a comment",
                    "type": "string",
                    "enum": [
                      "Content",
                      "Reaction"
                    ]
                  },
                  "content": {
                    "description": "The comment content",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 5000
                  }
                },
                "required": [
                  "modelId",
                  "modelType",
                  "content"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "description": "The comment ID",
                            "type": "string"
                          },
                          "content": {
                            "description": "The comment content",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "ISO 8601 when the reaction was created",
                            "type": "string"
                          },
                          "modelId": {
                            "description": "The ID of the model being reacted to",
                            "type": "string"
                          },
                          "modelType": {
                            "description": "The type of model being reacted to",
                            "type": "string",
                            "enum": [
                              "Content",
                              "Reaction"
                            ]
                          },
                          "user": {
                            "description": "The user who made the comment",
                            "type": "object",
                            "properties": {
                              "address": {
                                "description": "The Solana address of the user",
                                "type": "string"
                              },
                              "bannerImage": {
                                "description": "The banner image of the user",
                                "type": "string"
                              },
                              "description": {
                                "description": "The description of the user",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The display name of the user",
                                "type": "string"
                              },
                              "isNSFW": {
                                "description": "Whether the user is NSFW",
                                "type": "boolean"
                              },
                              "isVerified": {
                                "description": "Whether the user is verified",
                                "type": "boolean"
                              },
                              "profileImage": {
                                "description": "The profile image of the user",
                                "type": "string"
                              },
                              "isLive": {
                                "description": "Whether the user is live",
                                "type": "boolean"
                              },
                              "followersCount": {
                                "description": "The number of followers of the user",
                                "type": "number"
                              },
                              "subscribersCount": {
                                "description": "The number of subscribers of the user",
                                "type": "number"
                              },
                              "profileUrl": {
                                "description": "The Xeenon profile URL of the user",
                                "type": "string"
                              }
                            },
                            "required": [
                              "address",
                              "isNSFW",
                              "isVerified",
                              "isLive",
                              "followersCount",
                              "subscribersCount",
                              "profileUrl"
                            ],
                            "additionalProperties": false
                          },
                          "reactionsSummary": {
                            "description": "The summary of the reaction",
                            "type": "object",
                            "properties": {
                              "likesCount": {
                                "description": "The number of likes",
                                "type": "number"
                              },
                              "dislikesCount": {
                                "description": "The number of dislikes",
                                "type": "number"
                              },
                              "commentsCount": {
                                "description": "The number of comments",
                                "type": "number"
                              },
                              "isLiked": {
                                "description": "Whether the user has liked the model",
                                "type": "boolean"
                              },
                              "isDisliked": {
                                "description": "Whether the user has disliked the model",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "likesCount",
                              "dislikesCount",
                              "commentsCount"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "_id",
                          "createdAt",
                          "modelId",
                          "modelType",
                          "user",
                          "reactionsSummary"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "count": {
                      "description": "The number of comments",
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "count"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getReactionsComments",
        "tags": [
          "Reactions"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "modelId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "modelType",
            "schema": {
              "type": "string",
              "enum": [
                "Content",
                "Reaction"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "skip",
            "schema": {
              "type": "number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false
          }
        ],
        "description": "Get comments for a model"
      }
    },
    "/reactions/comments/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "description": "The number of comments deleted",
                      "type": "number"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "deleteReactionsCommentsById",
        "tags": [
          "Reactions"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "description": "The comment ID",
              "type": "string"
            },
            "required": true
          }
        ],
        "description": "Delete a comment"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "description": "The number of comments updated",
                      "type": "number"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "patchReactionsCommentsById",
        "tags": [
          "Reactions"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "description": "The comment ID",
              "type": "string"
            },
            "required": true
          }
        ],
        "description": "Edit a comment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "description": "The updated comment content",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 5000
                  }
                },
                "required": [
                  "content"
                ],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/search/users": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "description": "The total number of users found",
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "description": "The Solana address of the user",
                            "type": "string"
                          },
                          "bannerImage": {
                            "description": "The banner image of the user",
                            "type": "string"
                          },
                          "description": {
                            "description": "The description of the user",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "The display name of the user",
                            "type": "string"
                          },
                          "isNSFW": {
                            "description": "Whether the user is NSFW",
                            "type": "boolean"
                          },
                          "isVerified": {
                            "description": "Whether the user is verified",
                            "type": "boolean"
                          },
                          "profileImage": {
                            "description": "The profile image of the user",
                            "type": "string"
                          },
                          "isLive": {
                            "description": "Whether the user is live",
                            "type": "boolean"
                          },
                          "followersCount": {
                            "description": "The number of followers of the user",
                            "type": "number"
                          },
                          "subscribersCount": {
                            "description": "The number of subscribers of the user",
                            "type": "number"
                          },
                          "profileUrl": {
                            "description": "The Xeenon profile URL of the user",
                            "type": "string"
                          }
                        },
                        "required": [
                          "address",
                          "isNSFW",
                          "isVerified",
                          "isLive",
                          "followersCount",
                          "subscribersCount",
                          "profileUrl"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "count",
                    "items"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getSearchUsers",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "description": "The search query",
              "type": "string",
              "minLength": 3,
              "maxLength": 100
            },
            "required": true
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The limit of the search results",
              "default": 10,
              "type": "number",
              "minimum": 1,
              "maximum": 100
            },
            "required": true
          },
          {
            "in": "query",
            "name": "skip",
            "schema": {
              "description": "The skip of the search results",
              "default": 0,
              "type": "number",
              "minimum": 0
            },
            "required": true
          }
        ],
        "description": "Search Xeenon users by name or address"
      }
    },
    "/search/clips": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "description": "The total number of clips found",
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "description": "The content ID",
                            "type": "string"
                          },
                          "headline": {
                            "description": "The content headline",
                            "type": "string"
                          },
                          "description": {
                            "description": "The content description",
                            "type": "string"
                          },
                          "thumbnail": {
                            "description": "The content thumbnail URL",
                            "type": "string"
                          },
                          "url": {
                            "description": "The content URL in Xeenon",
                            "type": "string"
                          },
                          "tags": {
                            "description": "The content tags",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "isNSFW": {
                            "description": "Whether the content is NSFW",
                            "type": "boolean"
                          },
                          "durationSeconds": {
                            "description": "The content duration in seconds",
                            "type": "number"
                          },
                          "views": {
                            "description": "The number of views",
                            "type": "number"
                          },
                          "createdAt": {
                            "description": "ISO 8601 when the content was created",
                            "type": "string"
                          },
                          "user": {
                            "description": "The content creator",
                            "type": "object",
                            "properties": {
                              "address": {
                                "description": "The Solana address of the user",
                                "type": "string"
                              },
                              "bannerImage": {
                                "description": "The banner image of the user",
                                "type": "string"
                              },
                              "description": {
                                "description": "The description of the user",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The display name of the user",
                                "type": "string"
                              },
                              "isNSFW": {
                                "description": "Whether the user is NSFW",
                                "type": "boolean"
                              },
                              "isVerified": {
                                "description": "Whether the user is verified",
                                "type": "boolean"
                              },
                              "profileImage": {
                                "description": "The profile image of the user",
                                "type": "string"
                              },
                              "isLive": {
                                "description": "Whether the user is live",
                                "type": "boolean"
                              },
                              "followersCount": {
                                "description": "The number of followers of the user",
                                "type": "number"
                              },
                              "subscribersCount": {
                                "description": "The number of subscribers of the user",
                                "type": "number"
                              },
                              "profileUrl": {
                                "description": "The Xeenon profile URL of the user",
                                "type": "string"
                              }
                            },
                            "required": [
                              "address",
                              "isNSFW",
                              "isVerified",
                              "isLive",
                              "followersCount",
                              "subscribersCount",
                              "profileUrl"
                            ],
                            "additionalProperties": false
                          },
                          "subcategory": {
                            "description": "The content subcategory",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The subcategory name",
                                "type": "string"
                              },
                              "slug": {
                                "description": "The subcategory slug",
                                "type": "string"
                              },
                              "description": {
                                "description": "The subcategory description",
                                "type": "string"
                              },
                              "category": {
                                "description": "The category slug of the subcategory",
                                "type": "string"
                              },
                              "image": {
                                "description": "The subcategory image",
                                "type": "string"
                              },
                              "isNSFW": {
                                "description": "Whether the subcategory is NSFW",
                                "type": "boolean"
                              },
                              "tags": {
                                "description": "The subcategory tags",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "name",
                              "slug",
                              "description",
                              "category"
                            ],
                            "additionalProperties": false
                          },
                          "reactionsSummary": {
                            "description": "The summary of the reactions",
                            "type": "object",
                            "properties": {
                              "likesCount": {
                                "description": "The number of likes",
                                "type": "number"
                              },
                              "dislikesCount": {
                                "description": "The number of dislikes",
                                "type": "number"
                              },
                              "commentsCount": {
                                "description": "The number of comments",
                                "type": "number"
                              },
                              "isLiked": {
                                "description": "Whether the user has liked the model",
                                "type": "boolean"
                              },
                              "isDisliked": {
                                "description": "Whether the user has disliked the model",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "likesCount",
                              "dislikesCount",
                              "commentsCount"
                            ],
                            "additionalProperties": false
                          },
                          "kind": {
                            "type": "string",
                            "const": "Clip"
                          }
                        },
                        "required": [
                          "_id",
                          "headline",
                          "createdAt",
                          "user",
                          "reactionsSummary",
                          "kind"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "count",
                    "items"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getSearchClips",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "description": "The search query",
              "type": "string",
              "minLength": 3,
              "maxLength": 100
            },
            "required": true
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The limit of the search results",
              "default": 10,
              "type": "number",
              "minimum": 1,
              "maximum": 100
            },
            "required": true
          },
          {
            "in": "query",
            "name": "skip",
            "schema": {
              "description": "The skip of the search results",
              "default": 0,
              "type": "number",
              "minimum": 0
            },
            "required": true
          }
        ],
        "description": "Search Xeenon clips by title or description"
      }
    },
    "/search/videos": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "description": "The total number of videos found",
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "description": "The content ID",
                            "type": "string"
                          },
                          "headline": {
                            "description": "The content headline",
                            "type": "string"
                          },
                          "description": {
                            "description": "The content description",
                            "type": "string"
                          },
                          "thumbnail": {
                            "description": "The content thumbnail URL",
                            "type": "string"
                          },
                          "url": {
                            "description": "The content URL in Xeenon",
                            "type": "string"
                          },
                          "tags": {
                            "description": "The content tags",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "isNSFW": {
                            "description": "Whether the content is NSFW",
                            "type": "boolean"
                          },
                          "durationSeconds": {
                            "description": "The content duration in seconds",
                            "type": "number"
                          },
                          "views": {
                            "description": "The number of views",
                            "type": "number"
                          },
                          "createdAt": {
                            "description": "ISO 8601 when the content was created",
                            "type": "string"
                          },
                          "user": {
                            "description": "The content creator",
                            "type": "object",
                            "properties": {
                              "address": {
                                "description": "The Solana address of the user",
                                "type": "string"
                              },
                              "bannerImage": {
                                "description": "The banner image of the user",
                                "type": "string"
                              },
                              "description": {
                                "description": "The description of the user",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The display name of the user",
                                "type": "string"
                              },
                              "isNSFW": {
                                "description": "Whether the user is NSFW",
                                "type": "boolean"
                              },
                              "isVerified": {
                                "description": "Whether the user is verified",
                                "type": "boolean"
                              },
                              "profileImage": {
                                "description": "The profile image of the user",
                                "type": "string"
                              },
                              "isLive": {
                                "description": "Whether the user is live",
                                "type": "boolean"
                              },
                              "followersCount": {
                                "description": "The number of followers of the user",
                                "type": "number"
                              },
                              "subscribersCount": {
                                "description": "The number of subscribers of the user",
                                "type": "number"
                              },
                              "profileUrl": {
                                "description": "The Xeenon profile URL of the user",
                                "type": "string"
                              }
                            },
                            "required": [
                              "address",
                              "isNSFW",
                              "isVerified",
                              "isLive",
                              "followersCount",
                              "subscribersCount",
                              "profileUrl"
                            ],
                            "additionalProperties": false
                          },
                          "subcategory": {
                            "description": "The content subcategory",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The subcategory name",
                                "type": "string"
                              },
                              "slug": {
                                "description": "The subcategory slug",
                                "type": "string"
                              },
                              "description": {
                                "description": "The subcategory description",
                                "type": "string"
                              },
                              "category": {
                                "description": "The category slug of the subcategory",
                                "type": "string"
                              },
                              "image": {
                                "description": "The subcategory image",
                                "type": "string"
                              },
                              "isNSFW": {
                                "description": "Whether the subcategory is NSFW",
                                "type": "boolean"
                              },
                              "tags": {
                                "description": "The subcategory tags",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "name",
                              "slug",
                              "description",
                              "category"
                            ],
                            "additionalProperties": false
                          },
                          "reactionsSummary": {
                            "description": "The summary of the reactions",
                            "type": "object",
                            "properties": {
                              "likesCount": {
                                "description": "The number of likes",
                                "type": "number"
                              },
                              "dislikesCount": {
                                "description": "The number of dislikes",
                                "type": "number"
                              },
                              "commentsCount": {
                                "description": "The number of comments",
                                "type": "number"
                              },
                              "isLiked": {
                                "description": "Whether the user has liked the model",
                                "type": "boolean"
                              },
                              "isDisliked": {
                                "description": "Whether the user has disliked the model",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "likesCount",
                              "dislikesCount",
                              "commentsCount"
                            ],
                            "additionalProperties": false
                          },
                          "kind": {
                            "type": "string",
                            "const": "Video"
                          }
                        },
                        "required": [
                          "_id",
                          "headline",
                          "createdAt",
                          "user",
                          "reactionsSummary",
                          "kind"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "count",
                    "items"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getSearchVideos",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "description": "The search query",
              "type": "string",
              "minLength": 3,
              "maxLength": 100
            },
            "required": true
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The limit of the search results",
              "default": 10,
              "type": "number",
              "minimum": 1,
              "maximum": 100
            },
            "required": true
          },
          {
            "in": "query",
            "name": "skip",
            "schema": {
              "description": "The skip of the search results",
              "default": 0,
              "type": "number",
              "minimum": 0
            },
            "required": true
          }
        ],
        "description": "Search Xeenon videos by title or description"
      }
    },
    "/search/streams": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "description": "The total number of streams found",
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "description": "The content ID",
                            "type": "string"
                          },
                          "headline": {
                            "description": "The content headline",
                            "type": "string"
                          },
                          "description": {
                            "description": "The content description",
                            "type": "string"
                          },
                          "thumbnail": {
                            "description": "The content thumbnail URL",
                            "type": "string"
                          },
                          "url": {
                            "description": "The content URL in Xeenon",
                            "type": "string"
                          },
                          "tags": {
                            "description": "The content tags",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "isNSFW": {
                            "description": "Whether the content is NSFW",
                            "type": "boolean"
                          },
                          "durationSeconds": {
                            "description": "The content duration in seconds",
                            "type": "number"
                          },
                          "views": {
                            "description": "The number of views",
                            "type": "number"
                          },
                          "createdAt": {
                            "description": "ISO 8601 when the content was created",
                            "type": "string"
                          },
                          "user": {
                            "description": "The content creator",
                            "type": "object",
                            "properties": {
                              "address": {
                                "description": "The Solana address of the user",
                                "type": "string"
                              },
                              "bannerImage": {
                                "description": "The banner image of the user",
                                "type": "string"
                              },
                              "description": {
                                "description": "The description of the user",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The display name of the user",
                                "type": "string"
                              },
                              "isNSFW": {
                                "description": "Whether the user is NSFW",
                                "type": "boolean"
                              },
                              "isVerified": {
                                "description": "Whether the user is verified",
                                "type": "boolean"
                              },
                              "profileImage": {
                                "description": "The profile image of the user",
                                "type": "string"
                              },
                              "isLive": {
                                "description": "Whether the user is live",
                                "type": "boolean"
                              },
                              "followersCount": {
                                "description": "The number of followers of the user",
                                "type": "number"
                              },
                              "subscribersCount": {
                                "description": "The number of subscribers of the user",
                                "type": "number"
                              },
                              "profileUrl": {
                                "description": "The Xeenon profile URL of the user",
                                "type": "string"
                              }
                            },
                            "required": [
                              "address",
                              "isNSFW",
                              "isVerified",
                              "isLive",
                              "followersCount",
                              "subscribersCount",
                              "profileUrl"
                            ],
                            "additionalProperties": false
                          },
                          "subcategory": {
                            "description": "The content subcategory",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The subcategory name",
                                "type": "string"
                              },
                              "slug": {
                                "description": "The subcategory slug",
                                "type": "string"
                              },
                              "description": {
                                "description": "The subcategory description",
                                "type": "string"
                              },
                              "category": {
                                "description": "The category slug of the subcategory",
                                "type": "string"
                              },
                              "image": {
                                "description": "The subcategory image",
                                "type": "string"
                              },
                              "isNSFW": {
                                "description": "Whether the subcategory is NSFW",
                                "type": "boolean"
                              },
                              "tags": {
                                "description": "The subcategory tags",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "name",
                              "slug",
                              "description",
                              "category"
                            ],
                            "additionalProperties": false
                          },
                          "reactionsSummary": {
                            "description": "The summary of the reactions",
                            "type": "object",
                            "properties": {
                              "likesCount": {
                                "description": "The number of likes",
                                "type": "number"
                              },
                              "dislikesCount": {
                                "description": "The number of dislikes",
                                "type": "number"
                              },
                              "commentsCount": {
                                "description": "The number of comments",
                                "type": "number"
                              },
                              "isLiked": {
                                "description": "Whether the user has liked the model",
                                "type": "boolean"
                              },
                              "isDisliked": {
                                "description": "Whether the user has disliked the model",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "likesCount",
                              "dislikesCount",
                              "commentsCount"
                            ],
                            "additionalProperties": false
                          },
                          "kind": {
                            "type": "string",
                            "const": "Stream"
                          }
                        },
                        "required": [
                          "_id",
                          "headline",
                          "createdAt",
                          "user",
                          "reactionsSummary",
                          "kind"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "count",
                    "items"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getSearchStreams",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "description": "The search query",
              "type": "string",
              "minLength": 3,
              "maxLength": 100
            },
            "required": true
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The limit of the search results",
              "default": 10,
              "type": "number",
              "minimum": 1,
              "maximum": 100
            },
            "required": true
          },
          {
            "in": "query",
            "name": "skip",
            "schema": {
              "description": "The skip of the search results",
              "default": 0,
              "type": "number",
              "minimum": 0
            },
            "required": true
          }
        ],
        "description": "Search Xeenon streams by title or description"
      }
    },
    "/search/categories": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "description": "The total number of subcategories found",
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The subcategory name",
                            "type": "string"
                          },
                          "slug": {
                            "description": "The subcategory slug",
                            "type": "string"
                          },
                          "description": {
                            "description": "The subcategory description",
                            "type": "string"
                          },
                          "category": {
                            "description": "The category slug of the subcategory",
                            "type": "string"
                          },
                          "image": {
                            "description": "The subcategory image",
                            "type": "string"
                          },
                          "isNSFW": {
                            "description": "Whether the subcategory is NSFW",
                            "type": "boolean"
                          },
                          "tags": {
                            "description": "The subcategory tags",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "name",
                          "slug",
                          "description",
                          "category"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "count",
                    "items"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getSearchCategories",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "description": "The search query",
              "type": "string",
              "minLength": 3,
              "maxLength": 100
            },
            "required": true
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The limit of the search results",
              "default": 10,
              "type": "number",
              "minimum": 1,
              "maximum": 100
            },
            "required": true
          },
          {
            "in": "query",
            "name": "skip",
            "schema": {
              "description": "The skip of the search results",
              "default": 0,
              "type": "number",
              "minimum": 0
            },
            "required": true
          }
        ],
        "description": "Search Xeenon content subcategories by name or description"
      }
    },
    "/streams": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "description": "The content ID",
                        "type": "string"
                      },
                      "headline": {
                        "description": "The content headline",
                        "type": "string"
                      },
                      "description": {
                        "description": "The content description",
                        "type": "string"
                      },
                      "thumbnail": {
                        "description": "The content thumbnail URL",
                        "type": "string"
                      },
                      "url": {
                        "description": "The content URL in Xeenon",
                        "type": "string"
                      },
                      "tags": {
                        "description": "The content tags",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "isNSFW": {
                        "description": "Whether the content is NSFW",
                        "type": "boolean"
                      },
                      "durationSeconds": {
                        "description": "The content duration in seconds",
                        "type": "number"
                      },
                      "views": {
                        "description": "The number of views",
                        "type": "number"
                      },
                      "createdAt": {
                        "description": "ISO 8601 when the content was created",
                        "type": "string"
                      },
                      "user": {
                        "description": "The content creator",
                        "type": "object",
                        "properties": {
                          "address": {
                            "description": "The Solana address of the user",
                            "type": "string"
                          },
                          "bannerImage": {
                            "description": "The banner image of the user",
                            "type": "string"
                          },
                          "description": {
                            "description": "The description of the user",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "The display name of the user",
                            "type": "string"
                          },
                          "isNSFW": {
                            "description": "Whether the user is NSFW",
                            "type": "boolean"
                          },
                          "isVerified": {
                            "description": "Whether the user is verified",
                            "type": "boolean"
                          },
                          "profileImage": {
                            "description": "The profile image of the user",
                            "type": "string"
                          },
                          "isLive": {
                            "description": "Whether the user is live",
                            "type": "boolean"
                          },
                          "followersCount": {
                            "description": "The number of followers of the user",
                            "type": "number"
                          },
                          "subscribersCount": {
                            "description": "The number of subscribers of the user",
                            "type": "number"
                          },
                          "profileUrl": {
                            "description": "The Xeenon profile URL of the user",
                            "type": "string"
                          }
                        },
                        "required": [
                          "address",
                          "isNSFW",
                          "isVerified",
                          "isLive",
                          "followersCount",
                          "subscribersCount",
                          "profileUrl"
                        ],
                        "additionalProperties": false
                      },
                      "subcategory": {
                        "description": "The content subcategory",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The subcategory name",
                            "type": "string"
                          },
                          "slug": {
                            "description": "The subcategory slug",
                            "type": "string"
                          },
                          "description": {
                            "description": "The subcategory description",
                            "type": "string"
                          },
                          "category": {
                            "description": "The category slug of the subcategory",
                            "type": "string"
                          },
                          "image": {
                            "description": "The subcategory image",
                            "type": "string"
                          },
                          "isNSFW": {
                            "description": "Whether the subcategory is NSFW",
                            "type": "boolean"
                          },
                          "tags": {
                            "description": "The subcategory tags",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "name",
                          "slug",
                          "description",
                          "category"
                        ],
                        "additionalProperties": false
                      },
                      "reactionsSummary": {
                        "description": "The summary of the reactions",
                        "type": "object",
                        "properties": {
                          "likesCount": {
                            "description": "The number of likes",
                            "type": "number"
                          },
                          "dislikesCount": {
                            "description": "The number of dislikes",
                            "type": "number"
                          },
                          "commentsCount": {
                            "description": "The number of comments",
                            "type": "number"
                          },
                          "isLiked": {
                            "description": "Whether the user has liked the model",
                            "type": "boolean"
                          },
                          "isDisliked": {
                            "description": "Whether the user has disliked the model",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "likesCount",
                          "dislikesCount",
                          "commentsCount"
                        ],
                        "additionalProperties": false
                      },
                      "kind": {
                        "type": "string",
                        "const": "Stream"
                      },
                      "liveAt": {
                        "description": "The ISO date and time the stream started",
                        "type": "string"
                      },
                      "currentViewers": {
                        "description": "The current number of viewers",
                        "type": "number"
                      },
                      "maxViewers": {
                        "description": "The maximum number of viewers",
                        "type": "number"
                      }
                    },
                    "required": [
                      "_id",
                      "headline",
                      "createdAt",
                      "user",
                      "reactionsSummary",
                      "kind",
                      "liveAt",
                      "currentViewers",
                      "maxViewers"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getStreams",
        "tags": [
          "Stream"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "subcategory",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Get Xeenon live streams by category or subcategory"
      }
    },
    "/streams/own": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "description": "The content ID",
                        "type": "string"
                      },
                      "headline": {
                        "description": "The content headline",
                        "type": "string"
                      },
                      "description": {
                        "description": "The content description",
                        "type": "string"
                      },
                      "thumbnail": {
                        "description": "The content thumbnail URL",
                        "type": "string"
                      },
                      "url": {
                        "description": "The content URL in Xeenon",
                        "type": "string"
                      },
                      "tags": {
                        "description": "The content tags",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "isNSFW": {
                        "description": "Whether the content is NSFW",
                        "type": "boolean"
                      },
                      "durationSeconds": {
                        "description": "The content duration in seconds",
                        "type": "number"
                      },
                      "views": {
                        "description": "The number of views",
                        "type": "number"
                      },
                      "createdAt": {
                        "description": "ISO 8601 when the content was created",
                        "type": "string"
                      },
                      "user": {
                        "description": "The content creator",
                        "type": "object",
                        "properties": {
                          "address": {
                            "description": "The Solana address of the user",
                            "type": "string"
                          },
                          "bannerImage": {
                            "description": "The banner image of the user",
                            "type": "string"
                          },
                          "description": {
                            "description": "The description of the user",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "The display name of the user",
                            "type": "string"
                          },
                          "isNSFW": {
                            "description": "Whether the user is NSFW",
                            "type": "boolean"
                          },
                          "isVerified": {
                            "description": "Whether the user is verified",
                            "type": "boolean"
                          },
                          "profileImage": {
                            "description": "The profile image of the user",
                            "type": "string"
                          },
                          "isLive": {
                            "description": "Whether the user is live",
                            "type": "boolean"
                          },
                          "followersCount": {
                            "description": "The number of followers of the user",
                            "type": "number"
                          },
                          "subscribersCount": {
                            "description": "The number of subscribers of the user",
                            "type": "number"
                          },
                          "profileUrl": {
                            "description": "The Xeenon profile URL of the user",
                            "type": "string"
                          }
                        },
                        "required": [
                          "address",
                          "isNSFW",
                          "isVerified",
                          "isLive",
                          "followersCount",
                          "subscribersCount",
                          "profileUrl"
                        ],
                        "additionalProperties": false
                      },
                      "subcategory": {
                        "description": "The content subcategory",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The subcategory name",
                            "type": "string"
                          },
                          "slug": {
                            "description": "The subcategory slug",
                            "type": "string"
                          },
                          "description": {
                            "description": "The subcategory description",
                            "type": "string"
                          },
                          "category": {
                            "description": "The category slug of the subcategory",
                            "type": "string"
                          },
                          "image": {
                            "description": "The subcategory image",
                            "type": "string"
                          },
                          "isNSFW": {
                            "description": "Whether the subcategory is NSFW",
                            "type": "boolean"
                          },
                          "tags": {
                            "description": "The subcategory tags",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "name",
                          "slug",
                          "description",
                          "category"
                        ],
                        "additionalProperties": false
                      },
                      "reactionsSummary": {
                        "description": "The summary of the reactions",
                        "type": "object",
                        "properties": {
                          "likesCount": {
                            "description": "The number of likes",
                            "type": "number"
                          },
                          "dislikesCount": {
                            "description": "The number of dislikes",
                            "type": "number"
                          },
                          "commentsCount": {
                            "description": "The number of comments",
                            "type": "number"
                          },
                          "isLiked": {
                            "description": "Whether the user has liked the model",
                            "type": "boolean"
                          },
                          "isDisliked": {
                            "description": "Whether the user has disliked the model",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "likesCount",
                          "dislikesCount",
                          "commentsCount"
                        ],
                        "additionalProperties": false
                      },
                      "kind": {
                        "type": "string",
                        "const": "Stream"
                      },
                      "liveAt": {
                        "description": "The ISO date and time the stream started",
                        "type": "string"
                      },
                      "currentViewers": {
                        "description": "The current number of viewers",
                        "type": "number"
                      },
                      "maxViewers": {
                        "description": "The maximum number of viewers",
                        "type": "number"
                      }
                    },
                    "required": [
                      "_id",
                      "headline",
                      "createdAt",
                      "user",
                      "reactionsSummary",
                      "kind",
                      "liveAt",
                      "currentViewers",
                      "maxViewers"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getStreamsOwn",
        "tags": [
          "Stream"
        ],
        "parameters": [],
        "description": "Get Xeenon live stream(s) for the current user"
      }
    },
    "/streams/settings": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "headline": {
                      "description": "Headline of the stream",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 100
                    },
                    "description": {
                      "description": "Description of the stream",
                      "type": "string",
                      "minLength": 0,
                      "maxLength": 500
                    },
                    "tags": {
                      "description": "Tags of the stream",
                      "maxItems": 10,
                      "type": "array",
                      "items": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                      }
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getStreamsSettings",
        "tags": [
          "Stream"
        ],
        "parameters": [],
        "description": "Get the default stream settings for the current user (headline, description, tags)"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "headline": {
                      "description": "Headline of the stream",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 100
                    },
                    "description": {
                      "description": "Description of the stream",
                      "type": "string",
                      "minLength": 0,
                      "maxLength": 500
                    },
                    "tags": {
                      "description": "Tags of the stream",
                      "maxItems": 10,
                      "type": "array",
                      "items": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 30
                      }
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "postStreamsSettings",
        "tags": [
          "Stream"
        ],
        "parameters": [],
        "description": "Update the default stream settings for the current user (headline, description, tags), It also updates any live stream(s) with the new settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "headline": {
                    "description": "Headline of the stream",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "description": {
                    "description": "Description of the stream",
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 500
                  },
                  "tags": {
                    "description": "Tags of the stream",
                    "maxItems": 10,
                    "type": "array",
                    "items": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 30
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/tokens/platform/history": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "fromDate": {
                      "description": "The ISO date of the start of the returned data",
                      "type": "string"
                    },
                    "toDate": {
                      "description": "The ISO date of the end of the returned data",
                      "type": "string"
                    },
                    "segmentSizeMs": {
                      "description": "The size of the returned segments in milliseconds",
                      "type": "number"
                    },
                    "count": {
                      "description": "The total number of entries in the returned data",
                      "type": "number"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "description": "The ISO date of the data point",
                            "type": "string"
                          },
                          "value": {
                            "type": "object",
                            "properties": {
                              "debt": {
                                "description": "The aggregated debt of all Xeenon tokens in CREDIEZ",
                                "type": "number"
                              },
                              "mCap": {
                                "description": "The aggregated market cap of all Xeenon tokens in CREDIEZ",
                                "type": "number"
                              },
                              "tokens": {
                                "description": "The number of Xeenon tokens launched",
                                "type": "number"
                              }
                            },
                            "required": [
                              "debt",
                              "mCap",
                              "tokens"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "timestamp",
                          "value"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "fromDate",
                    "toDate",
                    "segmentSizeMs",
                    "count",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getTokensPlatformHistory",
        "tags": [
          "Tokens"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "resolution",
            "schema": {
              "type": "string",
              "enum": [
                "1h",
                "1d",
                "1w",
                "1m",
                "3m",
                "6m",
                "all"
              ]
            }
          }
        ],
        "description": "Get the total Xeenon platform value history (debt, market cap, number of tokens launched)"
      }
    },
    "/tokens/platform/activity": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userAddress": {
                        "description": "The address of the user that performed the activity",
                        "type": "string"
                      },
                      "type": {
                        "description": "The type of the activity",
                        "type": "string",
                        "enum": [
                          "buy",
                          "sell",
                          "deposit",
                          "withdraw",
                          "borrow",
                          "repay",
                          "claim-creator-rewards",
                          "claim-staker-rewards",
                          "floor-raised",
                          "new-token",
                          "period-end"
                        ]
                      },
                      "signature": {
                        "description": "The TX signature of the activity",
                        "type": "string"
                      },
                      "amount": {
                        "description": "The number of tokens relevant to this transaction for the type buy, sell, deposit, withdraw, claim-creator-rewards, claim-staker-rewards. For borrow and repay, it is the amount of CREDIEZ borrowed or repaid. For floor-raised, it is new price of the tokens in CREDIEZ. For new-token, it is the initial price of the token in CREDIEZ. For period-end, it is the reward amount in tokens earned by stakers.",
                        "type": "number"
                      },
                      "secondaryAmount": {
                        "description": "For the types buy, sell, claim-creator-rewards, claim-staker-rewards, deposit, withdraw is the value of the activity in CREDIEZ. For period-end, it is the reward amount in CREDIEZ earned by stakers. Empty for other types.",
                        "type": "number"
                      },
                      "createdAt": {
                        "description": "The ISO date of the trade",
                        "type": "string"
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "description": "The Solana address of the user",
                            "type": "string"
                          },
                          "bannerImage": {
                            "description": "The banner image of the user",
                            "type": "string"
                          },
                          "description": {
                            "description": "The description of the user",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "The display name of the user",
                            "type": "string"
                          },
                          "isNSFW": {
                            "description": "Whether the user is NSFW",
                            "type": "boolean"
                          },
                          "isVerified": {
                            "description": "Whether the user is verified",
                            "type": "boolean"
                          },
                          "profileImage": {
                            "description": "The profile image of the user",
                            "type": "string"
                          },
                          "isLive": {
                            "description": "Whether the user is live",
                            "type": "boolean"
                          },
                          "followersCount": {
                            "description": "The number of followers of the user",
                            "type": "number"
                          },
                          "subscribersCount": {
                            "description": "The number of subscribers of the user",
                            "type": "number"
                          },
                          "profileUrl": {
                            "description": "The Xeenon profile URL of the user",
                            "type": "string"
                          }
                        },
                        "required": [
                          "address",
                          "isNSFW",
                          "isVerified",
                          "isLive",
                          "followersCount",
                          "subscribersCount",
                          "profileUrl"
                        ],
                        "additionalProperties": false
                      },
                      "token": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the token",
                            "type": "string"
                          },
                          "symbol": {
                            "description": "The symbol of the token",
                            "type": "string"
                          },
                          "image": {
                            "description": "The image of the token",
                            "type": "string"
                          },
                          "address": {
                            "description": "The Solana address of the token",
                            "type": "string"
                          },
                          "decimals": {
                            "description": "The number of decimals of the token",
                            "type": "number"
                          },
                          "url": {
                            "description": "The URL of the token in Xeenon",
                            "type": "string"
                          },
                          "price": {
                            "description": "The current price of the token in CREDIEZ",
                            "type": "number"
                          },
                          "supply": {
                            "description": "The total supply of the token",
                            "type": "number"
                          },
                          "debt": {
                            "description": "The total amount of tokens borrowed",
                            "type": "number"
                          },
                          "staked": {
                            "description": "The total amount of tokens deposited",
                            "type": "number"
                          },
                          "mCap": {
                            "description": "The market cap of the token in CREDIEZ",
                            "type": "number"
                          },
                          "volume24h": {
                            "description": "The trading volume of the token in CREDIEZ",
                            "type": "number"
                          },
                          "change24h": {
                            "description": "The change in price of the token in the last 24 hours",
                            "type": "number"
                          },
                          "creatorRewardsSplit": {
                            "description": "The percentage of the rewards that goes to the creator",
                            "type": "number"
                          }
                        },
                        "required": [
                          "name",
                          "symbol",
                          "address",
                          "decimals",
                          "url",
                          "price",
                          "supply",
                          "debt",
                          "staked",
                          "mCap",
                          "volume24h",
                          "change24h",
                          "creatorRewardsSplit"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "userAddress",
                      "type",
                      "signature",
                      "amount",
                      "secondaryAmount",
                      "createdAt",
                      "token"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getTokensPlatformActivity",
        "tags": [
          "Tokens"
        ],
        "parameters": [],
        "description": "Get the latest activity on the platform"
      }
    },
    "/tokens/platform": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "volume24h": {
                      "description": "The volume of the platform in the last 24 hours in CREDIEZ",
                      "type": "number"
                    },
                    "change24h": {
                      "description": "The change of the platform in the last 24 hours in %",
                      "type": "number"
                    },
                    "activeTraders": {
                      "description": "The number of active traders on the platform",
                      "type": "number"
                    },
                    "activeTokens": {
                      "description": "The number of active tokens on the platform",
                      "type": "number"
                    },
                    "newTokens": {
                      "description": "The number of new tokens launched on the platform in the last week",
                      "type": "number"
                    }
                  },
                  "required": [
                    "volume24h",
                    "change24h",
                    "activeTraders",
                    "activeTokens",
                    "newTokens"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getTokensPlatform",
        "tags": [
          "Tokens"
        ],
        "parameters": [],
        "description": "Get the current state of the Xeenon platform (volume24h, change24h, activeTraders, activeTokens, newTokens)"
      }
    },
    "/tokens": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "description": "The total number of tokens",
                      "type": "number"
                    },
                    "items": {
                      "description": "The list of tokens",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the token",
                            "type": "string"
                          },
                          "symbol": {
                            "description": "The symbol of the token",
                            "type": "string"
                          },
                          "image": {
                            "description": "The image of the token",
                            "type": "string"
                          },
                          "address": {
                            "description": "The Solana address of the token",
                            "type": "string"
                          },
                          "decimals": {
                            "description": "The number of decimals of the token",
                            "type": "number"
                          },
                          "url": {
                            "description": "The URL of the token in Xeenon",
                            "type": "string"
                          },
                          "price": {
                            "description": "The current price of the token in CREDIEZ",
                            "type": "number"
                          },
                          "supply": {
                            "description": "The total supply of the token",
                            "type": "number"
                          },
                          "debt": {
                            "description": "The total amount of tokens borrowed",
                            "type": "number"
                          },
                          "staked": {
                            "description": "The total amount of tokens deposited",
                            "type": "number"
                          },
                          "mCap": {
                            "description": "The market cap of the token in CREDIEZ",
                            "type": "number"
                          },
                          "volume24h": {
                            "description": "The trading volume of the token in CREDIEZ",
                            "type": "number"
                          },
                          "change24h": {
                            "description": "The change in price of the token in the last 24 hours",
                            "type": "number"
                          },
                          "creatorRewardsSplit": {
                            "description": "The percentage of the rewards that goes to the creator",
                            "type": "number"
                          }
                        },
                        "required": [
                          "name",
                          "symbol",
                          "address",
                          "decimals",
                          "url",
                          "price",
                          "supply",
                          "debt",
                          "staked",
                          "mCap",
                          "volume24h",
                          "change24h",
                          "creatorRewardsSplit"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "count",
                    "items"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getTokens",
        "tags": [
          "Tokens"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "description": "The page number (0-n)",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "description": "The number of tokens per page",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "description": "The field to sort by",
              "type": "string",
              "enum": [
                "volume24h",
                "change24h",
                "price",
                "_id"
              ]
            }
          }
        ],
        "description": "Get the list of tokens launched in Xeenon"
      }
    },
    "/tokens/portfolio": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totals": {
                      "type": "object",
                      "properties": {
                        "staked": {
                          "description": "The total value of the tokens staked in the portfolio",
                          "type": "number"
                        },
                        "debt": {
                          "description": "The total value of the debt in the portfolio",
                          "type": "number"
                        },
                        "balance": {
                          "description": "The total value of the balance in the portfolio",
                          "type": "number"
                        },
                        "floor": {
                          "description": "The total floor value of the tokens in the portfolio",
                          "type": "number"
                        },
                        "totalValue": {
                          "description": "The total value of all the assets in the portfolio in CREDIEZ",
                          "type": "number"
                        },
                        "netValue": {
                          "description": "The total value of the assets in the portfolio minus the debt in CREDIEZ",
                          "type": "number"
                        }
                      },
                      "required": [
                        "staked",
                        "debt",
                        "balance",
                        "floor",
                        "totalValue",
                        "netValue"
                      ],
                      "additionalProperties": false
                    },
                    "positions": {
                      "description": "The list of positions in the portfolio",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "token": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The name of the token",
                                "type": "string"
                              },
                              "symbol": {
                                "description": "The symbol of the token",
                                "type": "string"
                              },
                              "image": {
                                "description": "The image of the token",
                                "type": "string"
                              },
                              "decimals": {
                                "description": "The decimals of the token",
                                "type": "number"
                              }
                            },
                            "required": [
                              "name",
                              "symbol",
                              "decimals"
                            ],
                            "additionalProperties": false
                          },
                          "stakedValue": {
                            "description": "The value of the tokens staked in the portfolio",
                            "type": "number"
                          },
                          "balanceValue": {
                            "description": "The value of the tokens in the portfolio",
                            "type": "number"
                          },
                          "debt": {
                            "description": "The debt of the position",
                            "type": "number"
                          },
                          "floorValue": {
                            "description": "The floor value of the position",
                            "type": "number"
                          },
                          "staked": {
                            "description": "The number of tokens staked in the position",
                            "type": "number"
                          },
                          "balance": {
                            "description": "The number of tokens in the position",
                            "type": "number"
                          },
                          "floor": {
                            "description": "The floor price of the position",
                            "type": "number"
                          },
                          "totalValue": {
                            "description": "The total value of the position in CREDIEZ",
                            "type": "number"
                          },
                          "netValue": {
                            "description": "The net value of the position in CREDIEZ",
                            "type": "number"
                          },
                          "createdAt": {
                            "description": "The ISO date of the position",
                            "type": "string"
                          },
                          "change24h": {
                            "description": "The 24h change of the position",
                            "type": "number"
                          },
                          "price": {
                            "description": "The price of the token in CREDIEZ",
                            "type": "number"
                          },
                          "hasStaked": {
                            "description": "Whether the user has staked the token",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "token",
                          "stakedValue",
                          "balanceValue",
                          "debt",
                          "floorValue",
                          "staked",
                          "balance",
                          "floor",
                          "totalValue",
                          "netValue",
                          "createdAt",
                          "change24h",
                          "price",
                          "hasStaked"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "totals",
                    "positions"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getTokensPortfolio",
        "tags": [
          "Tokens"
        ],
        "parameters": [],
        "description": "Get the details of the current user portfolio"
      }
    },
    "/tokens/portfolio/history": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "segmentSizeMs": {
                      "description": "The size of the returned segments in milliseconds",
                      "type": "number"
                    },
                    "fromDate": {
                      "description": "The ISO date of the start of the returned data",
                      "type": "string"
                    },
                    "toDate": {
                      "description": "The ISO date of the end of the returned data",
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "description": "The ISO date of the data point",
                            "type": "string"
                          },
                          "floor": {
                            "description": "The total floor value of the tokens in the portfolio",
                            "type": "number"
                          },
                          "debt": {
                            "description": "The total value of the debt in the portfolio",
                            "type": "number"
                          },
                          "balance": {
                            "description": "The total value of the balance in the portfolio",
                            "type": "number"
                          },
                          "staked": {
                            "description": "The total value of the tokens staked in the portfolio",
                            "type": "number"
                          },
                          "netValue": {
                            "description": "The total value of the assets in the portfolio minus the debt in CREDIEZ",
                            "type": "number"
                          },
                          "totalValue": {
                            "description": "The total value of all the assets in the portfolio in CREDIEZ",
                            "type": "number"
                          }
                        },
                        "required": [
                          "timestamp",
                          "floor",
                          "debt",
                          "balance",
                          "staked",
                          "netValue",
                          "totalValue"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "segmentSizeMs",
                    "fromDate",
                    "toDate",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getTokensPortfolioHistory",
        "tags": [
          "Tokens"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "resolution",
            "schema": {
              "type": "string",
              "enum": [
                "1h",
                "1d",
                "1w",
                "1m",
                "3m",
                "6m",
                "all"
              ]
            }
          }
        ],
        "description": "Get the historic value of the current user portfolio"
      }
    },
    "/tokens/claimed-rewards-history": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "segmentSizeMs": {
                      "description": "The size of the returned segments in milliseconds",
                      "type": "number"
                    },
                    "fromDate": {
                      "description": "The ISO date of the start of the returned data",
                      "type": "string"
                    },
                    "toDate": {
                      "description": "The ISO date of the end of the returned data",
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "description": "The ISO date of the data point",
                            "type": "string"
                          },
                          "totalClaimedRewards": {
                            "description": "The total claimed rewards of the user in CREDIEZ",
                            "type": "number"
                          },
                          "creatorClaimedRewards": {
                            "description": "The claimed rewards of the user for the creator in CREDIEZ",
                            "type": "number"
                          },
                          "stakerClaimedRewards": {
                            "description": "The claimed rewards of the user for the staker in CREDIEZ",
                            "type": "number"
                          }
                        },
                        "required": [
                          "timestamp",
                          "totalClaimedRewards",
                          "creatorClaimedRewards",
                          "stakerClaimedRewards"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "segmentSizeMs",
                    "fromDate",
                    "toDate",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getTokensClaimed-rewards-history",
        "tags": [
          "Tokens"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "resolution",
            "schema": {
              "type": "string",
              "enum": [
                "1h",
                "1d",
                "1w",
                "1m",
                "3m",
                "6m",
                "all"
              ]
            }
          }
        ],
        "description": "Get the historic claimed rewards of the current user"
      }
    },
    "/tokens/claimed-rewards-summary": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "current": {
                      "description": "The current claimed rewards of the user in CREDIEZ",
                      "type": "number"
                    },
                    "startMonth": {
                      "description": "The claimed rewards of the user for the start of the current month in CREDIEZ",
                      "type": "number"
                    },
                    "startPrevMonth": {
                      "description": "The claimed rewards of the user for the start of the previous month in CREDIEZ",
                      "type": "number"
                    }
                  },
                  "required": [
                    "current",
                    "startMonth",
                    "startPrevMonth"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getTokensClaimed-rewards-summary",
        "tags": [
          "Tokens"
        ],
        "parameters": [],
        "description": "Get the summary of the claimed rewards of the current user"
      }
    },
    "/tokens/activity": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "description": "The total number of activities",
                      "type": "number"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "userAddress": {
                            "description": "The address of the user that performed the activity",
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of the activity",
                            "type": "string",
                            "enum": [
                              "buy",
                              "sell",
                              "deposit",
                              "withdraw",
                              "borrow",
                              "repay",
                              "claim-creator-rewards",
                              "claim-staker-rewards",
                              "floor-raised",
                              "new-token",
                              "period-end"
                            ]
                          },
                          "signature": {
                            "description": "The TX signature of the activity",
                            "type": "string"
                          },
                          "amount": {
                            "description": "The number of tokens relevant to this transaction for the type buy, sell, deposit, withdraw, claim-creator-rewards, claim-staker-rewards. For borrow and repay, it is the amount of CREDIEZ borrowed or repaid. For floor-raised, it is new price of the tokens in CREDIEZ. For new-token, it is the initial price of the token in CREDIEZ. For period-end, it is the reward amount in tokens earned by stakers.",
                            "type": "number"
                          },
                          "secondaryAmount": {
                            "description": "For the types buy, sell, claim-creator-rewards, claim-staker-rewards, deposit, withdraw is the value of the activity in CREDIEZ. For period-end, it is the reward amount in CREDIEZ earned by stakers. Empty for other types.",
                            "type": "number"
                          },
                          "createdAt": {
                            "description": "The ISO date of the trade",
                            "type": "string"
                          },
                          "token": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The name of the token",
                                "type": "string"
                              },
                              "symbol": {
                                "description": "The symbol of the token",
                                "type": "string"
                              },
                              "image": {
                                "description": "The image of the token",
                                "type": "string"
                              },
                              "address": {
                                "description": "The Solana address of the token",
                                "type": "string"
                              },
                              "decimals": {
                                "description": "The number of decimals of the token",
                                "type": "number"
                              },
                              "url": {
                                "description": "The URL of the token in Xeenon",
                                "type": "string"
                              },
                              "price": {
                                "description": "The current price of the token in CREDIEZ",
                                "type": "number"
                              },
                              "supply": {
                                "description": "The total supply of the token",
                                "type": "number"
                              },
                              "debt": {
                                "description": "The total amount of tokens borrowed",
                                "type": "number"
                              },
                              "staked": {
                                "description": "The total amount of tokens deposited",
                                "type": "number"
                              },
                              "mCap": {
                                "description": "The market cap of the token in CREDIEZ",
                                "type": "number"
                              },
                              "volume24h": {
                                "description": "The trading volume of the token in CREDIEZ",
                                "type": "number"
                              },
                              "change24h": {
                                "description": "The change in price of the token in the last 24 hours",
                                "type": "number"
                              },
                              "creatorRewardsSplit": {
                                "description": "The percentage of the rewards that goes to the creator",
                                "type": "number"
                              }
                            },
                            "required": [
                              "name",
                              "symbol",
                              "address",
                              "decimals",
                              "url",
                              "price",
                              "supply",
                              "debt",
                              "staked",
                              "mCap",
                              "volume24h",
                              "change24h",
                              "creatorRewardsSplit"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "userAddress",
                          "type",
                          "signature",
                          "amount",
                          "secondaryAmount",
                          "createdAt",
                          "token"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "total",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getTokensActivity",
        "tags": [
          "Tokens"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number"
            }
          }
        ],
        "description": "Get the activity of the current user"
      }
    },
    "/tokens/{tokenAddress}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the token",
                      "type": "string"
                    },
                    "symbol": {
                      "description": "The symbol of the token",
                      "type": "string"
                    },
                    "image": {
                      "description": "The image of the token",
                      "type": "string"
                    },
                    "address": {
                      "description": "The Solana address of the token",
                      "type": "string"
                    },
                    "decimals": {
                      "description": "The number of decimals of the token",
                      "type": "number"
                    },
                    "url": {
                      "description": "The URL of the token in Xeenon",
                      "type": "string"
                    },
                    "price": {
                      "description": "The current price of the token in CREDIEZ",
                      "type": "number"
                    },
                    "supply": {
                      "description": "The total supply of the token",
                      "type": "number"
                    },
                    "debt": {
                      "description": "The total amount of tokens borrowed",
                      "type": "number"
                    },
                    "staked": {
                      "description": "The total amount of tokens deposited",
                      "type": "number"
                    },
                    "mCap": {
                      "description": "The market cap of the token in CREDIEZ",
                      "type": "number"
                    },
                    "volume24h": {
                      "description": "The trading volume of the token in CREDIEZ",
                      "type": "number"
                    },
                    "change24h": {
                      "description": "The change in price of the token in the last 24 hours",
                      "type": "number"
                    },
                    "creatorRewardsSplit": {
                      "description": "The percentage of the rewards that goes to the creator",
                      "type": "number"
                    }
                  },
                  "required": [
                    "name",
                    "symbol",
                    "address",
                    "decimals",
                    "url",
                    "price",
                    "supply",
                    "debt",
                    "staked",
                    "mCap",
                    "volume24h",
                    "change24h",
                    "creatorRewardsSplit"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getTokensByTokenAddress",
        "tags": [
          "Tokens"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tokenAddress",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "description": "Get the details of a token"
      }
    },
    "/tokens/{tokenAddress}/price-history": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "segmentSizeMs": {
                      "description": "The size of the returned segments in milliseconds",
                      "type": "number"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "price": {
                            "description": "The price of the token in CREDIEZ",
                            "type": "number"
                          },
                          "floor": {
                            "description": "The floor price of the token in CREDIEZ",
                            "type": "number"
                          },
                          "timestamp": {
                            "description": "The ISO date of the price",
                            "type": "string"
                          },
                          "supply": {
                            "description": "The supply of the token",
                            "type": "number"
                          }
                        },
                        "required": [
                          "price",
                          "floor",
                          "timestamp",
                          "supply"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "segmentSizeMs",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getTokensByTokenAddressPrice-history",
        "tags": [
          "Tokens"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tokenAddress",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "resolution",
            "schema": {
              "type": "string",
              "enum": [
                "1h",
                "1d",
                "1w",
                "1m",
                "3m",
                "6m",
                "all"
              ]
            }
          }
        ],
        "description": "Get the price history of a token"
      }
    },
    "/tokens/{tokenAddress}/trades": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "description": "The total number of trades",
                      "type": "number"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "userAddress": {
                            "description": "The address of the user",
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of the trade",
                            "type": "string",
                            "enum": [
                              "buy",
                              "sell"
                            ]
                          },
                          "signature": {
                            "description": "The TX signature of the trade",
                            "type": "string"
                          },
                          "amount": {
                            "description": "The number of tokens traded",
                            "type": "number"
                          },
                          "secondaryAmount": {
                            "description": "The value of the trade in CREDIEZ",
                            "type": "number"
                          },
                          "createdAt": {
                            "description": "The ISO date of the trade",
                            "type": "string"
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "description": "The Solana address of the user",
                                "type": "string"
                              },
                              "bannerImage": {
                                "description": "The banner image of the user",
                                "type": "string"
                              },
                              "description": {
                                "description": "The description of the user",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The display name of the user",
                                "type": "string"
                              },
                              "isNSFW": {
                                "description": "Whether the user is NSFW",
                                "type": "boolean"
                              },
                              "isVerified": {
                                "description": "Whether the user is verified",
                                "type": "boolean"
                              },
                              "profileImage": {
                                "description": "The profile image of the user",
                                "type": "string"
                              },
                              "isLive": {
                                "description": "Whether the user is live",
                                "type": "boolean"
                              },
                              "followersCount": {
                                "description": "The number of followers of the user",
                                "type": "number"
                              },
                              "subscribersCount": {
                                "description": "The number of subscribers of the user",
                                "type": "number"
                              },
                              "profileUrl": {
                                "description": "The Xeenon profile URL of the user",
                                "type": "string"
                              }
                            },
                            "required": [
                              "address",
                              "isNSFW",
                              "isVerified",
                              "isLive",
                              "followersCount",
                              "subscribersCount",
                              "profileUrl"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "userAddress",
                          "type",
                          "signature",
                          "amount",
                          "secondaryAmount",
                          "createdAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "total",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getTokensByTokenAddressTrades",
        "tags": [
          "Tokens"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tokenAddress",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "description": "The page number (0-n)",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "pageSize",
            "schema": {
              "description": "The number of trades per page",
              "type": "number"
            }
          }
        ],
        "description": "Get the trades of a token"
      }
    },
    "/tokens/{tokenAddress}/activity": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "description": "The total number of activities",
                      "type": "number"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "userAddress": {
                            "description": "The address of the user that performed the activity",
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of the activity",
                            "type": "string",
                            "enum": [
                              "buy",
                              "sell",
                              "deposit",
                              "withdraw",
                              "borrow",
                              "repay",
                              "claim-creator-rewards",
                              "claim-staker-rewards",
                              "floor-raised",
                              "new-token",
                              "period-end"
                            ]
                          },
                          "signature": {
                            "description": "The TX signature of the activity",
                            "type": "string"
                          },
                          "amount": {
                            "description": "The number of tokens relevant to this transaction for the type buy, sell, deposit, withdraw, claim-creator-rewards, claim-staker-rewards. For borrow and repay, it is the amount of CREDIEZ borrowed or repaid. For floor-raised, it is new price of the tokens in CREDIEZ. For new-token, it is the initial price of the token in CREDIEZ. For period-end, it is the reward amount in tokens earned by stakers.",
                            "type": "number"
                          },
                          "secondaryAmount": {
                            "description": "For the types buy, sell, claim-creator-rewards, claim-staker-rewards, deposit, withdraw is the value of the activity in CREDIEZ. For period-end, it is the reward amount in CREDIEZ earned by stakers. Empty for other types.",
                            "type": "number"
                          },
                          "createdAt": {
                            "description": "The ISO date of the trade",
                            "type": "string"
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "description": "The Solana address of the user",
                                "type": "string"
                              },
                              "bannerImage": {
                                "description": "The banner image of the user",
                                "type": "string"
                              },
                              "description": {
                                "description": "The description of the user",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "The display name of the user",
                                "type": "string"
                              },
                              "isNSFW": {
                                "description": "Whether the user is NSFW",
                                "type": "boolean"
                              },
                              "isVerified": {
                                "description": "Whether the user is verified",
                                "type": "boolean"
                              },
                              "profileImage": {
                                "description": "The profile image of the user",
                                "type": "string"
                              },
                              "isLive": {
                                "description": "Whether the user is live",
                                "type": "boolean"
                              },
                              "followersCount": {
                                "description": "The number of followers of the user",
                                "type": "number"
                              },
                              "subscribersCount": {
                                "description": "The number of subscribers of the user",
                                "type": "number"
                              },
                              "profileUrl": {
                                "description": "The Xeenon profile URL of the user",
                                "type": "string"
                              }
                            },
                            "required": [
                              "address",
                              "isNSFW",
                              "isVerified",
                              "isLive",
                              "followersCount",
                              "subscribersCount",
                              "profileUrl"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "userAddress",
                          "type",
                          "signature",
                          "amount",
                          "secondaryAmount",
                          "createdAt"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "total",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getTokensByTokenAddressActivity",
        "tags": [
          "Tokens"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tokenAddress",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "number"
            }
          }
        ],
        "description": "Get the activity of a token"
      }
    },
    "/tokens/{tokenAddress}/debt-positions-count": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "description": "The number of active debt positions",
                      "type": "number"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getTokensByTokenAddressDebt-positions-count",
        "tags": [
          "Tokens"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tokenAddress",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "description": "Get the number of active debt positions of a token"
      }
    },
    "/tokens/{tokenAddress}/rewards-performance-summary": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "oneYearWinCount": {
                      "description": "The number of times the token won a position in the leaderboard in the last year",
                      "type": "number"
                    },
                    "avgRewardsThreeMonths": {
                      "description": "The average rewards earned in the last three months in tokens",
                      "type": "number"
                    },
                    "rewardsThreeMonthsSum": {
                      "description": "The total rewards earned in the last three months in tokens",
                      "type": "number"
                    }
                  },
                  "required": [
                    "oneYearWinCount",
                    "avgRewardsThreeMonths",
                    "rewardsThreeMonthsSum"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getTokensByTokenAddressRewards-performance-summary",
        "tags": [
          "Tokens"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tokenAddress",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "description": "Get the rewards performance summary of a token (number of times the token won a position in the leaderboard in the last year, average rewards earned in the last three months in tokens, total rewards earned in the last three months in tokens)"
      }
    },
    "/tokens/{tokenAddress}/holders-summary": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalHolders": {
                      "description": "The total number of holders of the token",
                      "type": "number"
                    },
                    "newHolders": {
                      "description": "The number of new holders in the last week",
                      "type": "number"
                    },
                    "totalStakers": {
                      "description": "The total number of stakers of the token",
                      "type": "number"
                    },
                    "top10Holdings": {
                      "description": "The total number of tokens held by the top 10 holders of the token",
                      "type": "number"
                    }
                  },
                  "required": [
                    "totalHolders",
                    "newHolders",
                    "totalStakers",
                    "top10Holdings"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getTokensByTokenAddressHolders-summary",
        "tags": [
          "Tokens"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tokenAddress",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "description": "Get the holders summary of a token (total holders, new holders in the last week, total stakers, top 10 holdings)"
      }
    },
    "/users/whoami": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "description": "The Solana address of the user",
                      "type": "string"
                    },
                    "bannerImage": {
                      "description": "The banner image of the user",
                      "type": "string"
                    },
                    "description": {
                      "description": "The description of the user",
                      "type": "string"
                    },
                    "displayName": {
                      "description": "The display name of the user",
                      "type": "string"
                    },
                    "isNSFW": {
                      "description": "Whether the user is NSFW",
                      "type": "boolean"
                    },
                    "isVerified": {
                      "description": "Whether the user is verified",
                      "type": "boolean"
                    },
                    "profileImage": {
                      "description": "The profile image of the user",
                      "type": "string"
                    },
                    "isLive": {
                      "description": "Whether the user is live",
                      "type": "boolean"
                    },
                    "followersCount": {
                      "description": "The number of followers of the user",
                      "type": "number"
                    },
                    "subscribersCount": {
                      "description": "The number of subscribers of the user",
                      "type": "number"
                    },
                    "profileUrl": {
                      "description": "The Xeenon profile URL of the user",
                      "type": "string"
                    }
                  },
                  "required": [
                    "address",
                    "isNSFW",
                    "isVerified",
                    "isLive",
                    "followersCount",
                    "subscribersCount",
                    "profileUrl"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          }
        },
        "operationId": "getUsersWhoami",
        "tags": [
          "Users"
        ],
        "parameters": [],
        "description": "Get the current user"
      }
    },
    "/users/{address}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "description": "The Solana address of the user",
                      "type": "string"
                    },
                    "bannerImage": {
                      "description": "The banner image of the user",
                      "type": "string"
                    },
                    "description": {
                      "description": "The description of the user",
                      "type": "string"
                    },
                    "displayName": {
                      "description": "The display name of the user",
                      "type": "string"
                    },
                    "isNSFW": {
                      "description": "Whether the user is NSFW",
                      "type": "boolean"
                    },
                    "isVerified": {
                      "description": "Whether the user is verified",
                      "type": "boolean"
                    },
                    "profileImage": {
                      "description": "The profile image of the user",
                      "type": "string"
                    },
                    "isLive": {
                      "description": "Whether the user is live",
                      "type": "boolean"
                    },
                    "followersCount": {
                      "description": "The number of followers of the user",
                      "type": "number"
                    },
                    "subscribersCount": {
                      "description": "The number of subscribers of the user",
                      "type": "number"
                    },
                    "profileUrl": {
                      "description": "The Xeenon profile URL of the user",
                      "type": "string"
                    }
                  },
                  "required": [
                    "address",
                    "isNSFW",
                    "isVerified",
                    "isLive",
                    "followersCount",
                    "subscribersCount",
                    "profileUrl"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "const": "User not found"
                }
              }
            }
          }
        },
        "operationId": "getUsersByAddress",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "schema": {
              "description": "The Solana address of the user",
              "type": "string"
            },
            "required": true
          }
        ],
        "description": "Get a user public profile by their Solana address"
      }
    }
  }
}